//
//  LoginInteractor.swift
//  CleanTest
//
//  Created by Ahmed on 24/07/2023.
//  Copyright (c) 2023 Ahmed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
    func signIn(request: Login.SignIn.Request)
    func routToHome(request: Login.RoutToHome.Request)
}

protocol LoginDataStore
{
  var userName: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
  var presenter: LoginPresentationLogic?
  var worker: LoginWorker?
  var userName: String = ""
    func signIn(request: Login.SignIn.Request) {
        
        worker = LoginWorker()
        
        var params = [String : Any]()
        
        params = ["email" : request.email,
                  "password" : request.password]
        
        worker?.signIn(params: params, success: { (response) in
            
            self.presenter?.presentSignIn(response: response)
            
        }, fail: { (error) in
            
            self.presenter?.presentSignIn(response: error)
        })
    }
    func routToHome(request: Login.RoutToHome.Request) {
        userName = request.userName
        let response = Login.RoutToHome.Response()
        presenter?.routeToHome(response: response)
    }
}
